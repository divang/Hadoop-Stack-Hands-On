- Download JDK: 
https://www.oracle.com/java/technologies/javase-jdk8-downloads.html#license-lightbox

- Download Hadoop: 
https://mirrors.estointernet.in/apache/hadoop/common/hadoop-2.10.0/hadoop-2.10.0.tar.gz

- Single Node Hadoop Setup using YARN:
https://hadoop.apache.org/docs/r2.7.4/hadoop-project-dist/hadoop-common/SingleCluster.html#YARN_on_Single_Node

- set ~/.bash_profile [**replace jdk1.8.0_251 folder path]
    export JDK_HOME=/home/divangsharma/Downloads/jdk1.8.0_251/bin
    export JAVA_HOME=/home/divangsharma/Downloads/jdk1.8.0_251/jre
    export HADOOP_PATH=/home/divangsharma/hadoop-demo/hadoop-2.10.0
    PATH=$PATH:$HADOOP_PATH/bin:$HADOOP_PATH/sbin:$JDK_HOME:$JAVA_HOME
- source ~/.bash_profile

Download MapReduce code: [https://github.com/divang/hadoop-hands-on]

Compile java Map/Reduce program:
- export HADOOP_PATH=/home/divangsharma/hadoop-demo/hadoop-2.10.0

Compile Code:
- javac -cp .:$HADOOP_HOME/share/hadoop/common/hadoop-common-2.10.0.jar:$HADOOP_HOME/share/hadoop/mapreduce/hadoop-mapreduce-client-core-2.10.0.jar WordCount.java 

Build Jar:
- jar cf wc.jar WordCount*.class

Create a file "word.txt" with below content   
   aaa,bbb,ccc   
   ddd,aaa

Copy above file to HDFC
- hdfc dfs -put word.txt .

Run MR job in Hadoop:
- hadoop jar wc.jar  WordCount word.txt output

See progress
- http://localhost:8088/cluster
